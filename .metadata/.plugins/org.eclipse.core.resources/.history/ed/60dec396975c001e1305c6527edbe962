package labWork1;
import java.util.Stack;

public class DragonLaunch {
    private Stack<Person> kidnappedPeople;

    public DragonLaunch() {
        kidnappedPeople = new Stack<>();
    }

    // Method to kidnap a person and add them to the stack
    public void kidnap(Person person) {
        kidnappedPeople.push(person);
    }

    // Method to determine if the dragon will eat or not
    public boolean willDragonEatOrNot() {
        Stack<Person> tempStack = new Stack<>();

        // Iterate through the kidnapped people
        while (!kidnappedPeople.isEmpty()) {
            Person currentPerson = kidnappedPeople.pop();

            // Check if the current person can form a pair with the person at the top of the temp stack
            if (!tempStack.isEmpty() && currentPerson.getGender() != tempStack.peek().getGender()) {
                tempStack.pop(); // The pair disappears
            } else {
                tempStack.push(currentPerson);
            }
        }

        // If the temp stack is empty, the dragon will eat; otherwise, it won't
        return tempStack.isEmpty();
    }

    public static void main(String[] args) {
        DragonLaunch dragonLaunch = new DragonLaunch();

        // Example 1: BBGG (No launch, dragon will not eat)
        dragonLaunch.kidnap(new Person(Gender.BOY));
        dragonLaunch.kidnap(new Person(Gender.BOY));
        dragonLaunch.kidnap(new Person(Gender.GIRL));
        dragonLaunch.kidnap(new Person(Gender.GIRL));

        // Check if the dragon will eat or not
        boolean dragonWillEat = dragonLaunch.willDragonEatOrNot();
        System.out.println("Dragon will eat: " + dragonWillEat);

        // Example 2: GBGB (Launch, dragon will eat)
        dragonLaunch = new DragonLaunch();
        dragonLaunch.kidnap(new Person(Gender.GIRL));
        dragonLaunch.kidnap(new Person(Gender.BOY));
        dragonLaunch.kidnap(new Person(Gender.GIRL));
        dragonLaunch.kidnap(new Person(Gender.BOY));

        // Check if the dragon will eat or not
        dragonWillEat = dragonLaunch.willDragonEatOrNot();
        System.out.println("Dragon will eat: " + dragonWillEat);
    }
}